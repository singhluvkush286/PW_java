1. What is constructor ?
   Constructor is the special type of method in java , which is used to assign the value to instance varialbe . It's has no return type.

2.What is Constructor Chainning ?

 Constructor chaining is a mechanism in object-oriented programming where one constructor calls another constructor from the same class or the parent class in order 
 to initialize an object.

 In Java, you can chain constructors using the this keyword or the super keyword.

3.Can we call subclass constructor from superclass constructor ?
 No, we cannot call a subclass constructor from a superclass constructor directly. The reason is that when a superclass constructor is called, it initializes only 
 the  members of the superclass, not the members of the subclass. The subclass constructor can only be called after the superclass constructor has finished executing.
 
4.What is No-arguement constructor in java ?
 A no-argument constructor is a constructor that takes no arguments. It is defined explicitly in the code, and its purpose is to initialize the object 
  with default values or perform some initialization tasks.
 
5.What happen if keep return type for the constructor ?
 Program will compile and run successfully.

6.How is no arguement constrructor is differ from the default constructor ?
  A no-argument constructor is a constructor that takes no arguments. It is defined explicitly in the code, and its purpose is to initialize the object 
  with default values or perform some initialization tasks. If a class does not have any constructor defined, then the compiler automatically provides a default 
  no-argument constructor for that class.

7.When do we need Constructor overloading ?
  When we have differnt parameter for different object .
 
8.What is default constructor with example ?
 In Java, a default constructor is a constructor that is generated by the compiler if no other constructor is defined in the class. It is a no-argument
 constructor that initializes all instance variables to their default values, which are 0 or null for primitive types and object references, respectively.
 The purpose of a default constructor is to ensure that every object of the class is properly initialized.

public class MyClass {
    private int x;
    private String str;
    
    public MyClass() {
        // Default constructor
    }
}

 